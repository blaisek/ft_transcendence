"use strict";(self.webpackChunktranscendence=self.webpackChunktranscendence||[]).push([[861],{6861:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var e=a(5397),i=a(173);const o=class extends e.default{constructor(n){super(n),this.setTitle("Home"),this.initialize().then((n=>console.log("Home Info loaded")))}async getHtml(){return'\n        <div class="container mt-3 centered">\n        <div class="row">\n          <div class="col-lg-4">\n            <div class="card mb-4">\n              <div class="card-body text-center">\n                <img id="profilePic" src="" alt="Profile pic" class="rounded-circle img-fluid" style="width: 150px;">\n                <p class="text-muted mb-1">Player</p>\n              </div>\n            </div>\n            <div class="card mb-4 mb-lg-0">\n              <div class="card-body">\n                <p class="mb-4">\n                    Pong Games Played: <span id="pong-gamesPlayed"></span>\n                </p>\n                <p class="mb-4">\n                    Pong Games Won: <span id="pong-gamesWon"></span>\n                </p>\n                <p class="mb-4">\n                    Pong Games Lost: <span id="pong-gamesLost"></span>\n                </p>\n                <hr>\n                <p class="mb-4">\n                    TTT Games Played: <span id="tic-gamesPlayed"></span>\n                </p>\n                <p class="mb-4">\n                    TTT Games Won: <span id="tic-gamesWon"></span>\n                </p>\n                <p class="mb-4">\n                    TTT Tie Games: <span id="tic-gamesDraw"></span>\n                </p>\n                <p class="mb-4">\n                    TTT Games Lost: <span id="tic-gamesLost"></span>\n                </p>\n                <p class="mb-4">\n                    TTT Rank: <span id="tic-elo"></span>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div class="col-lg-8">\n            <div class="card mb-4" style="max-width: calc(100% - 200px);">\n              <div class="card-body">\n                <div class="row">\n                  <div class="col-sm-3">\n                    <p class="mb-0">Username</p>\n                  </div>\n                  <div class="col-sm-9">\n                    <p id="profile-username" class="text-muted mb-0"></p>\n                  </div>\n                </div>\n                <hr>\n                <div class="row">\n                  <div class="col-sm-3">\n                    <p class="mb-0">Email</p>\n                  </div>\n                  <div class="col-sm-9">\n                    <p id="email" class="text-muted mb-0"></p>\n                  </div>\n                </div>\n                <hr>\n                <div class="row">\n                  <div class="col-sm-3">\n                    <p class="mb-0">Bio</p>\n                  </div>\n                  <div class="col-sm-9">\n                    <p id="profile-bio" class="text-muted mb-0">bio</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-5">\n                <div class="card mb-4 mb-md-0">\n                  <div class="card-body">\n                    <p class="mb-4">PONG HISTORY</p>\n                    <ul id="pong-history" class="list-group">\n                    \n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-7">\n                <div class="card mb-4 mb-md-0" style="max-width: calc(100% - 200px);">\n                  <div class="card-body">\n                    <p class="mb-4">TIC-TAC-TOE HISTORY</p>\n                    <ul id="tic-history" class="list-group">\n                    \n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    '}async initialize(){console.log("2 times or not");const n=window.location.hostname,s=localStorage.getItem("token");if(!s)return void console.log("Token not found");try{const a=await fetch(`https://${n}/api/get_email/`,{method:"GET",headers:{Authorization:"Token "+s}});if(a.ok){const n=(await a.json()).email;document.getElementById("email").innerText="Email: "+n}else console.log("Failed to get email:",await a.text())}catch(n){console.log("Error:",n)}try{const a=await fetch(`https://${n}/api/get_bio/`,{method:"GET",headers:{Authorization:"Token "+s}});if(a.ok){const n=await a.json(),s=n.bio;console.log("userdata.bio : ",n.bio),document.getElementById("bio").innerText="Bio: "+s}else console.log("userdata.bio : ",userData.bio),console.log("Failed to get bio:",await a.text())}catch(n){console.log("Error:",n)}const a=localStorage.getItem("userId");await this.getProfilePic(a),await(0,i.R6)(a)}async getProfilePic(n){const s=window.location.hostname,a=localStorage.getItem("token");if(a)try{const e=await fetch(`https://${s}/api/get_profile_pic/${n}`,{method:"GET",headers:{Authorization:"Token "+a}});if(e.ok){const n=await e.json();document.getElementById("profilePic").src=n.profil_pic}else console.log("Failed to get profile pic:",await e.text())}catch(n){console.log("Error:",n)}else console.log("Token not found")}}}}]);