"use strict";(self.webpackChunktranscendence=self.webpackChunktranscendence||[]).push([[861],{6861:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var i=a(5397),e=a(173);const l=class extends i.default{constructor(n){super(n),this.setTitle("Home"),this.initialize().then((n=>console.log("Home Info loaded")))}async getHtml(){return'\n        <div class="container mt-3 centered lexend">\n        <div class="row" style="max-width: calc(100% - 200px);">\n          <div class="col-lg-4">\n            <div class="card mb-4">\n              <div class="card-body text-center center-content">\n                <div class="profilePicWrapper">\n                  <img id="profilePic" src="" alt="Profile pic" class="img-fluid">\n                </div>\n              </div>\n            </div>\n            <div class="card mb-4 mb-lg-0">\n              <div class="card-body">\n                <p class="mb-4">\n                    Pong Games Played: <span id="pong-gamesPlayed"></span>\n                </p>\n                <p class="mb-4">\n                    Pong Games Won: <span id="pong-gamesWon"></span>\n                </p>\n                <p class="mb-4">\n                    Pong Games Lost: <span id="pong-gamesLost"></span>\n                </p>\n                <hr>\n                <p class="mb-4">\n                    TTT Games Played: <span id="tic-gamesPlayed"></span>\n                </p>\n                <p class="mb-4">\n                    TTT Games Won: <span id="tic-gamesWon"></span>\n                </p>\n                <p class="mb-4">\n                    TTT Tie Games: <span id="tic-gamesDraw"></span>\n                </p>\n                <p class="mb-4">\n                    TTT Games Lost: <span id="tic-gamesLost"></span>\n                </p>\n                <p class="mb-4">\n                    TTT Rank: <span id="tic-elo"></span>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div class="col-lg-8">\n            <div class="card mb-4">\n              <div class="card-body">\n                <div class="row">\n                  <div class="col-sm-3">\n                    <p class="mb-0">Username</p>\n                  </div>\n                  <div class="col-sm-9">\n                    <p id="profile-username" class="text-muted mb-0"></p>\n                  </div>\n                </div>\n                <hr>\n                <div class="row">\n                  <div class="col-sm-3">\n                    <p class="mb-0">Email</p>\n                  </div>\n                  <div class="col-sm-9">\n                    <p id="profile-email" class="text-muted mb-0"></p>\n                  </div>\n                </div>\n                <hr>\n                <div class="row">\n                  <div class="col-sm-3">\n                    <p class="mb-0">Bio</p>\n                  </div>\n                  <div class="col-sm-9">\n                    <p id="profile-bio" class="text-muted mb-0"></p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-6">\n                <div class="card mb-4 mb-md-0" style="max-height: 400px;">\n                  <div class="card-body">\n                    <p class="mb-4">PONG HISTORY</p>\n                    <ul id="pong-history" style="overflow-y: auto; max-height: 300px;" class="list-group">\n                    \n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-6">\n                <div class="card mb-4 mb-md-0">\n                  <div class="card-body">\n                    <p class="mb-4">TIC-TAC-TOE HISTORY</p>\n                    <ul id="tic-history"  style="overflow-y: auto; max-height: 300px;" class="list-group">\n                    \n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    '}async initialize(){window.location.hostname;const n=localStorage.getItem("token"),s=localStorage.getItem("userId");n?(await this.getProfilePic(s),await(0,e.R6)(s)):console.log("Token not found")}async getProfilePic(n){const s=window.location.hostname,a=localStorage.getItem("token");if(a)try{const i=await fetch(`https://${s}/api/get_profile_pic/${n}`,{method:"GET",headers:{Authorization:"Token "+a}});if(i.ok){const n=await i.json();document.getElementById("profilePic").src=n.profil_pic}else console.log("Failed to get profile pic:",await i.text())}catch(n){console.log("Error:",n)}else console.log("Token not found")}}}}]);